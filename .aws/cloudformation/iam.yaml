AWSTemplateFormatVersion: "2010-09-09"
Description: "IAM Roles and Policies for Book Management System"

Parameters:
  ProjectName:
    Type: String
    Default: book-management
    Description: Name of the project used as a prefix for resources

Resources:
  # CloudFormationサービスロール
  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-cloudformation-service-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess # 注意: 本番環境では最小権限の原則に従って制限すべき

  # ECSタスク実行ロール
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-ecs-task-execution-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # ECRアクセス用カスタムポリシー
  ECRAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${ProjectName}-ecr-access-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetAuthorizationToken
            Resource: "*"

  # バックエンドタスクロール
  BackendTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-backend-task-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref S3AccessPolicy
        - !Ref RDSAccessPolicy

  # フロントエンドタスクロール
  FrontendTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-frontend-task-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref S3AccessPolicy

  # S3アクセス用カスタムポリシー
  S3AccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${ProjectName}-s3-access-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource:
              - !Sub "arn:aws:s3:::${ProjectName}-*"
              - !Sub "arn:aws:s3:::${ProjectName}-*/*"

  # RDSアクセス用カスタムポリシー
  RDSAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${ProjectName}-rds-access-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - rds-db:connect
            Resource: !Sub "arn:aws:rds-db:${AWS::Region}:${AWS::AccountId}:dbuser:*/${ProjectName}-db-user"

  # CI/CDパイプライン用ユーザー
  CICDUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub "${ProjectName}-cicd-user"
      ManagedPolicyArns:
        - !Ref CICDUserPolicy

  # CI/CDユーザー用アクセスキー
  CICDUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref CICDUser

  # CI/CDユーザー用ポリシー
  CICDUserPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${ProjectName}-cicd-user-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:PutImage
              - ecr:GetAuthorizationToken
            Resource: "*"
          - Effect: Allow
            Action:
              - ecs:UpdateService
              - ecs:DescribeServices
              - ecs:RegisterTaskDefinition
              - ecs:DescribeTaskDefinition
            Resource: "*"

Outputs:
  CloudFormationServiceRoleArn:
    Description: ARN of the CloudFormation Service Role
    Value: !GetAtt CloudFormationServiceRole.Arn
    Export:
      Name: !Sub "${ProjectName}-cloudformation-service-role-arn"

  ECSTaskExecutionRoleArn:
    Description: ARN of the ECS Task Execution Role
    Value: !GetAtt ECSTaskExecutionRole.Arn
    Export:
      Name: !Sub "${ProjectName}-ecs-task-execution-role-arn"

  BackendTaskRoleArn:
    Description: ARN of the Backend Task Role
    Value: !GetAtt BackendTaskRole.Arn
    Export:
      Name: !Sub "${ProjectName}-backend-task-role-arn"

  FrontendTaskRoleArn:
    Description: ARN of the Frontend Task Role
    Value: !GetAtt FrontendTaskRole.Arn
    Export:
      Name: !Sub "${ProjectName}-frontend-task-role-arn"

  CICDUserAccessKey:
    Description: Access Key ID for CICD User
    Value: !Ref CICDUserAccessKey
    Export:
      Name: !Sub "${ProjectName}-cicd-user-access-key"

  CICDUserSecretKey:
    Description: Secret Access Key for CICD User
    Value: !GetAtt CICDUserAccessKey.SecretAccessKey
