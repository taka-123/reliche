AWSTemplateFormatVersion: '2010-09-09'
Description: 'Book Management System - ECR Repositories'

Parameters:
  ProjectName:
    Type: String
    Default: book-management
    Description: Name of the project

  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - staging
      - development
    Description: Environment type (production, staging, development)

  ImageRetentionCount:
    Type: Number
    Default: 10
    Description: Number of images to keep per repository
    MinValue: 1
    MaxValue: 100

Resources:
  # バックエンド用ECRリポジトリ
  BackendRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${ProjectName}-${Environment}-backend
      ImageScanningConfiguration:
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: !Sub |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep only ${ImageRetentionCount} images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": ${ImageRetentionCount}
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      RepositoryPolicyText:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowPull
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-backend-repo
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # フロントエンド用ECRリポジトリ
  FrontendRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${ProjectName}-${Environment}-frontend
      ImageScanningConfiguration:
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: !Sub |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep only ${ImageRetentionCount} images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": ${ImageRetentionCount}
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      RepositoryPolicyText:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowPull
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-frontend-repo
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

Outputs:
  BackendRepositoryURI:
    Description: URI of the backend repository
    Value: !GetAtt BackendRepository.RepositoryUri
    Export:
      Name: !Sub ${ProjectName}-${Environment}-backend-repo-uri

  BackendRepositoryName:
    Description: Name of the backend repository
    Value: !Ref BackendRepository
    Export:
      Name: !Sub ${ProjectName}-${Environment}-backend-repo-name

  FrontendRepositoryURI:
    Description: URI of the frontend repository
    Value: !GetAtt FrontendRepository.RepositoryUri
    Export:
      Name: !Sub ${ProjectName}-${Environment}-frontend-repo-uri

  FrontendRepositoryName:
    Description: Name of the frontend repository
    Value: !Ref FrontendRepository
    Export:
      Name: !Sub ${ProjectName}-${Environment}-frontend-repo-name
