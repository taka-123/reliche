AWSTemplateFormatVersion: '2010-09-09'
Description: 'Book Management System - ECS Infrastructure'

Parameters:
  ProjectName:
    Type: String
    Default: book-management
    Description: Name of the project

  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - staging
      - development
    Description: Environment type (production, staging, development)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The first private subnet ID for the ECS tasks

  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The second private subnet ID for the ECS tasks

  ECSSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The security group ID for the ECS tasks

  BackendTargetGroupArn:
    Type: String
    Description: The ARN of the backend target group

  FrontendTargetGroupArn:
    Type: String
    Description: The ARN of the frontend target group

  BackendImageRepository:
    Type: String
    Description: The ECR repository URI for the backend image

  FrontendImageRepository:
    Type: String
    Description: The ECR repository URI for the frontend image

  BackendImageTag:
    Type: String
    Default: latest
    Description: The tag for the backend image

  FrontendImageTag:
    Type: String
    Default: latest
    Description: The tag for the frontend image

  BackendContainerPort:
    Type: Number
    Default: 80
    Description: The port on which the backend container listens

  FrontendContainerPort:
    Type: Number
    Default: 8080
    Description: The port on which the frontend container listens

  BackendDesiredCount:
    Type: Number
    Default: 2
    Description: The desired number of backend tasks

  FrontendDesiredCount:
    Type: Number
    Default: 2
    Description: The desired number of frontend tasks

  BackendTaskCPU:
    Type: Number
    Default: 512
    Description: The CPU units for the backend task

  BackendTaskMemory:
    Type: Number
    Default: 1024
    Description: The memory for the backend task

  FrontendTaskCPU:
    Type: Number
    Default: 256
    Description: The CPU units for the frontend task

  FrontendTaskMemory:
    Type: Number
    Default: 512
    Description: The memory for the frontend task

  DBHost:
    Type: String
    Description: The database host

  DBPort:
    Type: Number
    Default: 5432
    Description: The database port

  DBName:
    Type: String
    Default: book_management
    Description: The database name

  DBUsername:
    Type: String
    NoEcho: true
    Description: The database username

  DBPassword:
    Type: String
    NoEcho: true
    Description: The database password

  APIPublicURL:
    Type: String
    Description: The public URL for the API

  APIInternalURL:
    Type: String
    Description: The internal URL for the API

  AppKey:
    Type: String
    NoEcho: true
    Description: The Laravel application key

  JWTSecret:
    Type: String
    NoEcho: true
    Description: The JWT secret

Resources:
  # ECSクラスター
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${ProjectName}-${Environment}
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-cluster

  # ECS実行ロール（コンテナをプルするための権限）
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-${Environment}-ecs-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-ecs-execution-role

  # ECSタスクロール（アプリケーションが他のAWSサービスにアクセスするための権限）
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-${Environment}-ecs-task-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-ecs-task-role

  # CloudWatch Logsグループ（バックエンド）
  BackendLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${ProjectName}-${Environment}-backend
      RetentionInDays: 30

  # CloudWatch Logsグループ（フロントエンド）
  FrontendLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${ProjectName}-${Environment}-frontend
      RetentionInDays: 30

  # バックエンドタスク定義
  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ProjectName}-${Environment}-backend
      Cpu: !Ref BackendTaskCPU
      Memory: !Ref BackendTaskMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      ContainerDefinitions:
        - Name: backend
          Image: !Sub ${BackendImageRepository}:${BackendImageTag}
          Essential: true
          PortMappings:
            - ContainerPort: !Ref BackendContainerPort
              HostPort: !Ref BackendContainerPort
              Protocol: tcp
          Environment:
            - Name: APP_ENV
              Value: production
            - Name: APP_DEBUG
              Value: 'false'
            - Name: LOG_CHANNEL
              Value: stderr
            - Name: DB_CONNECTION
              Value: pgsql
            - Name: DB_HOST
              Value: !Ref DBHost
            - Name: DB_PORT
              Value: !Ref DBPort
            - Name: DB_DATABASE
              Value: !Ref DBName
            - Name: DB_USERNAME
              Value: !Ref DBUsername
            - Name: DB_PASSWORD
              Value: !Ref DBPassword
            - Name: APP_KEY
              Value: !Ref AppKey
            - Name: JWT_SECRET
              Value: !Ref JWTSecret
            - Name: CACHE_DRIVER
              Value: database
            - Name: SESSION_DRIVER
              Value: database
            - Name: QUEUE_CONNECTION
              Value: database
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref BackendLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -f http://localhost/health || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-backend-task-definition

  # フロントエンドタスク定義
  FrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ProjectName}-${Environment}-frontend
      Cpu: !Ref FrontendTaskCPU
      Memory: !Ref FrontendTaskMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      ContainerDefinitions:
        - Name: frontend
          Image: !Sub ${FrontendImageRepository}:${FrontendImageTag}
          Essential: true
          PortMappings:
            - ContainerPort: !Ref FrontendContainerPort
              HostPort: !Ref FrontendContainerPort
              Protocol: tcp
          Environment:
            - Name: NODE_ENV
              Value: production
            - Name: BROWSER_API_BASE_URL
              Value: !Ref APIPublicURL
            - Name: SERVER_API_BASE_URL
              Value: !Ref APIInternalURL
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref FrontendLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          HealthCheck:
            Command:
              - CMD-SHELL
              - wget -q --spider http://localhost:8080/health.txt || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 30
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-frontend-task-definition

  # バックエンドECSサービス
  BackendService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${ProjectName}-${Environment}-backend
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref BackendTaskDefinition
      DesiredCount: !Ref BackendDesiredCount
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref ECSSecurityGroupId
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2
      LoadBalancers:
        - ContainerName: backend
          ContainerPort: !Ref BackendContainerPort
          TargetGroupArn: !Ref BackendTargetGroupArn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      HealthCheckGracePeriodSeconds: 120
      DeploymentController:
        Type: ECS
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-backend-service

  # フロントエンドECSサービス
  FrontendService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${ProjectName}-${Environment}-frontend
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref FrontendTaskDefinition
      DesiredCount: !Ref FrontendDesiredCount
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref ECSSecurityGroupId
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2
      LoadBalancers:
        - ContainerName: frontend
          ContainerPort: !Ref FrontendContainerPort
          TargetGroupArn: !Ref FrontendTargetGroupArn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      HealthCheckGracePeriodSeconds: 60
      DeploymentController:
        Type: ECS
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-frontend-service

  # CloudWatch Alarmsのスケーリングポリシー（バックエンド）
  BackendScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: !Ref BackendDesiredCount
      ResourceId: !Sub service/${ECSCluster}/${BackendService.Name}
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService

  # CPUスケーリングポリシー（バックエンド）
  BackendCPUScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${ProjectName}-${Environment}-backend-cpu-scaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref BackendScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 70
        ScaleInCooldown: 300
        ScaleOutCooldown: 60

  # メモリスケーリングポリシー（バックエンド）
  BackendMemoryScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${ProjectName}-${Environment}-backend-memory-scaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref BackendScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageMemoryUtilization
        TargetValue: 70
        ScaleInCooldown: 300
        ScaleOutCooldown: 60

  # CloudWatch Alarmsのスケーリングポリシー（フロントエンド）
  FrontendScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: !Ref FrontendDesiredCount
      ResourceId: !Sub service/${ECSCluster}/${FrontendService.Name}
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService

  # CPUスケーリングポリシー（フロントエンド）
  FrontendCPUScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${ProjectName}-${Environment}-frontend-cpu-scaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref FrontendScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 70
        ScaleInCooldown: 300
        ScaleOutCooldown: 60

  # メモリスケーリングポリシー（フロントエンド）
  FrontendMemoryScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${ProjectName}-${Environment}-frontend-memory-scaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref FrontendScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageMemoryUtilization
        TargetValue: 70
        ScaleInCooldown: 300
        ScaleOutCooldown: 60

Outputs:
  ECSCluster:
    Description: ECS Cluster
    Value: !Ref ECSCluster
    Export:
      Name: !Sub ${ProjectName}-${Environment}-ecs-cluster

  BackendService:
    Description: Backend ECS Service
    Value: !Ref BackendService
    Export:
      Name: !Sub ${ProjectName}-${Environment}-backend-service

  FrontendService:
    Description: Frontend ECS Service
    Value: !Ref FrontendService
    Export:
      Name: !Sub ${ProjectName}-${Environment}-frontend-service

  BackendTaskDefinition:
    Description: Backend Task Definition
    Value: !Ref BackendTaskDefinition
    Export:
      Name: !Sub ${ProjectName}-${Environment}-backend-task-definition

  FrontendTaskDefinition:
    Description: Frontend Task Definition
    Value: !Ref FrontendTaskDefinition
    Export:
      Name: !Sub ${ProjectName}-${Environment}-frontend-task-definition
