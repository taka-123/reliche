FROM ubuntu:22.04

LABEL maintainer="Taylor Otwell"

ARG WWWGROUP=1000
ARG NODE_VERSION=20
ARG POSTGRES_VERSION=16

WORKDIR /var/www/html

ENV DEBIAN_FRONTEND noninteractive
ENV TZ=UTC

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update \
  && apt-get install -y gnupg gosu curl ca-certificates zip unzip git supervisor sqlite3 libcap2-bin libpng-dev python2 dnsutils librsvg2-bin fswatch \
  && curl -sS 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x14aa40ec0831756756d7f66c4f4ea0aae5267a6c' | gpg --dearmor | tee /etc/apt/keyrings/ppa_ondrej_php.gpg > /dev/null \
  && echo "deb [signed-by=/etc/apt/keyrings/ppa_ondrej_php.gpg] https://ppa.launchpadcontent.net/ondrej/php/ubuntu jammy main" > /etc/apt/sources.list.d/ppa_ondrej_php.list \
  && apt-get update \
  && apt-get install -y php8.3-cli php8.3-dev \
  php8.3-pgsql php8.3-sqlite3 php8.3-gd php8.3-imagick \
  php8.3-curl php8.3-imap php8.3-mysql php8.3-mbstring \
  php8.3-xml php8.3-zip php8.3-bcmath php8.3-soap \
  php8.3-intl php8.3-readline php8.3-ldap \
  php8.3-msgpack php8.3-igbinary php8.3-redis php8.3-swoole \
  php8.3-memcached php8.3-pcov php8.3-xdebug \
  nginx \
  && curl -sLS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer \
  && curl -sLS https://deb.nodesource.com/setup_$NODE_VERSION.x | bash - \
  && apt-get install -y nodejs \
  && npm install -g npm \
  && apt-get install -y postgresql-client-$POSTGRES_VERSION \
  && apt-get -y autoremove \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN setcap "cap_net_bind_service=+ep" /usr/bin/php8.3

RUN groupadd --force -g $WWWGROUP sail
RUN useradd -ms /bin/bash --no-user-group -g $WWWGROUP -u 1337 sail

# Nginxの設定
COPY .aws/nginx/nginx.conf /etc/nginx/nginx.conf
COPY .aws/nginx/default.conf /etc/nginx/conf.d/default.conf

# PHPの設定
COPY .aws/php/php.ini /etc/php/8.3/cli/conf.d/99-sail.ini

# Supervisorの設定
COPY .aws/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# アプリケーションファイルのコピー
COPY . /var/www/html

# Composerの依存関係をインストール（本番環境用）
RUN cd /var/www/html && composer install --no-dev --optimize-autoloader

# キャッシュをクリア
RUN cd /var/www/html && php artisan config:clear && php artisan route:clear && php artisan view:clear

# ストレージディレクトリの権限設定
RUN chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache
RUN chown -R sail:$WWWGROUP /var/www/html

# 公開ポートを指定
EXPOSE 80

# コンテナ起動時のコマンド
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
